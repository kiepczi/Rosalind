#Finding a Motid in DNA

#from a string
s = 'ATATTGATAAGCTTAGGGTTTGATAATTGATAACGTTGATAATTGATAAATTGATAATTGATAAGTTGATAACTTGATAATTGATAATAAGTTGATAATCGCTTGATAACCGACTCTTTGATAATTGATAATTGATAAGCCTTGATAATTTGATAAGTTGATAACTTGATAATCGTTGATAAATTGATAATTGATAATTGATAACTTGATAAATTGATAAGCTTGATAAATCATGTTTGATAATTGATAACTGGTTGATAACTTGATAATTGATAAATTGATAATTGTCCTTGATAACCTATCTGTTTGATAATTGATAATTGATAAGGGATTGATAATTGATAAGTATTGATAAAATGATTGATAATTGATAACTGGTTGATAAGTTGATAATTTGATAACTTGATAAGTGGGGAAAGTTGATAATTGATAAGGGTTGATAAGTTGATAAGCGCTTGATAATCTTGATAACTTGATAAATTGATAACACGTTGATAAGTCTTTGATAATTGATAACTTGATAATTTGATAATTGATAAATGTTGATAATTGATAATCGGTGTTGATAAATTGATAATTTTGATAATGGATGAGGCTTGATAATTTGATAATACATTGATAAGGCCTTGATAAGTTTAGTTGATAATTGATAATAATATCCGTTGATAACTTTATTGATAAGTGCAATCCGCTTGATAACTTTTGATAATTTGTTTGATAAAAAAAGTTAAATTGATAACACAACGTAATTGATAAATTTGATAATTGATAAGCGTTTGATAATTGATAATTGATAAATTGATAATTGATAAACTCCAGTTGATAATTTTGCTTGATAAGTTGTTGATAATATTGATAACCTTGATAAAGTGCTTGATAAGTGATTGATAAATTTGATAA'
t = 'TTGATAATT'

res = [] 

res = [i for i in range(len(s))  
       if s.startswith(t, (i-1))] 
str(res).replace(',', '')

#from a fasta file
from Bio.SeqRecord import SeqRecord
from Bio import SeqIO
from Bio import SeqUtils

s= 'ATT'

fasta_seq = SeqIO.parse("sequence.fasta", "fasta")
motifs = [] 
for record in fasta_seq:
    seq_fasta = SeqRecord(record.seq)
    results = SeqUtils.nt_search(str(seq_fasta), s)
    print(results)
    